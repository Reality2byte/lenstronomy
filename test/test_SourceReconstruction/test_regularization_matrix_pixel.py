import numpy as np
import pytest

from lenstronomy.SourceReconstruction.regularization_matrix_pixel import (
    pixelated_regularization_matrix,
)


def test_pixelated_regularization_matrix():
    with pytest.raises(ValueError, match="Unsupported regularization_type"):
        pixelated_regularization_matrix(2, 2, "WRONG")

    with pytest.raises(TypeError, match="xlen must be an integer"):
        pixelated_regularization_matrix(2.5, 2, "zeroth_order")

    with pytest.raises(TypeError, match="ylen must be an integer"):
        pixelated_regularization_matrix(2, 2.5, "zeroth_order")

    # test zeroth_order regularization matrix
    result = pixelated_regularization_matrix(1, 3, "zeroth_order")
    expected = np.array([[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]])
    assert np.allclose(result, expected, atol=1e-5)

    result = pixelated_regularization_matrix(3, 3, "zeroth_order")
    expected = np.array(
        [
            [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0],
        ]
    )
    assert np.allclose(result, expected, atol=1e-5)

    # test gradient regularization matrix
    result = pixelated_regularization_matrix(2, 3, "gradient")
    expected = np.array(
        [
            [4.0, -1.0, -1.0, -0.0, 0.0, 0.0],
            [-1.0, 4.0, -0.0, -1.0, 0.0, 0.0],
            [-1.0, -0.0, 4.0, -1.0, -1.0, -0.0],
            [-0.0, -1.0, -1.0, 4.0, -0.0, -1.0],
            [0.0, 0.0, -1.0, -0.0, 4.0, -1.0],
            [0.0, 0.0, -0.0, -1.0, -1.0, 4.0],
        ]
    )
    assert np.allclose(result, expected, atol=1e-5)

    result = pixelated_regularization_matrix(3, 3, "gradient")
    expected = np.array(
        [
            [4.0, -1.0, 0.0, -1.0, -0.0, -0.0, 0.0, 0.0, 0.0],
            [-1.0, 4.0, -1.0, -0.0, -1.0, -0.0, 0.0, 0.0, 0.0],
            [0.0, -1.0, 4.0, -0.0, -0.0, -1.0, 0.0, 0.0, 0.0],
            [-1.0, -0.0, -0.0, 4.0, -1.0, 0.0, -1.0, -0.0, -0.0],
            [-0.0, -1.0, -0.0, -1.0, 4.0, -1.0, -0.0, -1.0, -0.0],
            [-0.0, -0.0, -1.0, 0.0, -1.0, 4.0, -0.0, -0.0, -1.0],
            [0.0, 0.0, 0.0, -1.0, -0.0, -0.0, 4.0, -1.0, 0.0],
            [0.0, 0.0, 0.0, -0.0, -1.0, -0.0, -1.0, 4.0, -1.0],
            [0.0, 0.0, 0.0, -0.0, -0.0, -1.0, 0.0, -1.0, 4.0],
        ]
    )
    assert np.allclose(result, expected, atol=1e-5)

    # test curvature regularization matrix
    result = pixelated_regularization_matrix(3, 2, "curvature")
    expected = np.array(
        [
            [12.0, -4.0, 1.0, -4.0, -0.0, -0.0],
            [-4.0, 12.0, -4.0, -0.0, -4.0, -0.0],
            [1.0, -4.0, 12.0, -0.0, -0.0, -4.0],
            [-4.0, -0.0, -0.0, 12.0, -4.0, 1.0],
            [-0.0, -4.0, -0.0, -4.0, 12.0, -4.0],
            [-0.0, -0.0, -4.0, 1.0, -4.0, 12.0],
        ]
    )
    assert np.allclose(result, expected, atol=1e-5)

    result = pixelated_regularization_matrix(4, 4, "curvature")
    expected = np.array(
        [
            [
                12.0,
                -4.0,
                1.0,
                0.0,
                -4.0,
                -0.0,
                -0.0,
                -0.0,
                1.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            [
                -4.0,
                12.0,
                -4.0,
                1.0,
                -0.0,
                -4.0,
                -0.0,
                -0.0,
                0.0,
                1.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            [
                1.0,
                -4.0,
                12.0,
                -4.0,
                -0.0,
                -0.0,
                -4.0,
                -0.0,
                0.0,
                0.0,
                1.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            [
                0.0,
                1.0,
                -4.0,
                12.0,
                -0.0,
                -0.0,
                -0.0,
                -4.0,
                0.0,
                0.0,
                0.0,
                1.0,
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            [
                -4.0,
                -0.0,
                -0.0,
                -0.0,
                12.0,
                -4.0,
                1.0,
                0.0,
                -4.0,
                -0.0,
                -0.0,
                -0.0,
                1.0,
                0.0,
                0.0,
                0.0,
            ],
            [
                -0.0,
                -4.0,
                -0.0,
                -0.0,
                -4.0,
                12.0,
                -4.0,
                1.0,
                -0.0,
                -4.0,
                -0.0,
                -0.0,
                0.0,
                1.0,
                0.0,
                0.0,
            ],
            [
                -0.0,
                -0.0,
                -4.0,
                -0.0,
                1.0,
                -4.0,
                12.0,
                -4.0,
                -0.0,
                -0.0,
                -4.0,
                -0.0,
                0.0,
                0.0,
                1.0,
                0.0,
            ],
            [
                -0.0,
                -0.0,
                -0.0,
                -4.0,
                0.0,
                1.0,
                -4.0,
                12.0,
                -0.0,
                -0.0,
                -0.0,
                -4.0,
                0.0,
                0.0,
                0.0,
                1.0,
            ],
            [
                1.0,
                0.0,
                0.0,
                0.0,
                -4.0,
                -0.0,
                -0.0,
                -0.0,
                12.0,
                -4.0,
                1.0,
                0.0,
                -4.0,
                -0.0,
                -0.0,
                -0.0,
            ],
            [
                0.0,
                1.0,
                0.0,
                0.0,
                -0.0,
                -4.0,
                -0.0,
                -0.0,
                -4.0,
                12.0,
                -4.0,
                1.0,
                -0.0,
                -4.0,
                -0.0,
                -0.0,
            ],
            [
                0.0,
                0.0,
                1.0,
                0.0,
                -0.0,
                -0.0,
                -4.0,
                -0.0,
                1.0,
                -4.0,
                12.0,
                -4.0,
                -0.0,
                -0.0,
                -4.0,
                -0.0,
            ],
            [
                0.0,
                0.0,
                0.0,
                1.0,
                -0.0,
                -0.0,
                -0.0,
                -4.0,
                0.0,
                1.0,
                -4.0,
                12.0,
                -0.0,
                -0.0,
                -0.0,
                -4.0,
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                1.0,
                0.0,
                0.0,
                0.0,
                -4.0,
                -0.0,
                -0.0,
                -0.0,
                12.0,
                -4.0,
                1.0,
                0.0,
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                1.0,
                0.0,
                0.0,
                -0.0,
                -4.0,
                -0.0,
                -0.0,
                -4.0,
                12.0,
                -4.0,
                1.0,
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                1.0,
                0.0,
                -0.0,
                -0.0,
                -4.0,
                -0.0,
                1.0,
                -4.0,
                12.0,
                -4.0,
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                1.0,
                -0.0,
                -0.0,
                -0.0,
                -4.0,
                0.0,
                1.0,
                -4.0,
                12.0,
            ],
        ]
    )
    assert np.allclose(result, expected, atol=1e-5)
